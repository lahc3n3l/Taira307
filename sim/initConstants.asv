clear
clc
close

%% Define constants

x0 = [85;
    0;
    0;
    0;
    0;
    0;
    0;
    0.3 % 5.73 deg
    0];

u = [0;
    -0; % -5.73 deg
    0;
    0.0;
    0.0];
TF = 60; % seconds

% pitch command
u1min = -25 * pi/180;
u1max = 25 * pi/180;

% pitch command
u2min = -25 * pi/180;
u2max = 10 * pi/180;

% pitch command
u3min = -30 * pi/180;
u3max = 30 * pi/180;

% pitch command
u4min = 0.5 * pi/180;
u4max = 10 * pi/180;

% pitch command
u5min = -2 * pi/180;
u5max = 25 * pi/180;

%% Run the model

sim('gncTaira307.slx')

%% vis
% Extract time, states, and inputs
out = ans;
t = out.tout;
X = out.simX.Data;
U = out.simU.Data;

% Extract Euler angles from state vector
phi   = X(:,7); % roll
theta = X(:,8); % pitch
psi   = X(:,9); % yaw

% Extract control inputs
aileron    = U(:,1);
stabilator = U(:,2);
rudder     = U(:,3);
throttle1  = U(:,4);
throttle2  = U(:,5);

% Plot control inputs
figure;
subplot(3,1,1);
plot(t, aileron, 'r', t, stabilator, 'b', t, rudder, 'g');
xlabel('Time (s)');
ylabel('Control Surface Deflection (rad)');
legend('Aileron', 'Stabilator', 'Rudder');
title('Control Surface Commands');

subplot(3,1,2);
plot(t, throttle1, 'm', t, throttle2, 'c');
xlabel('Time (s)');
ylabel('Throttle Command');
legend('Throttle 1', 'Throttle 2');
title('Engine Commands');

% Plot aircraft orientation (Euler angles)
subplot(3,1,3);
plot(t, rad2deg(phi), 'r', t, rad2deg(theta), 'g', t, rad2deg(psi), 'b');
xlabel('Time (s)');
ylabel('Angle (deg)');
legend('Roll \phi', 'Pitch \theta', 'Yaw \psi');
title('Aircraft Orientation (Euler Angles)');
%% vis 2

% Extract time, control inputs
t = out.simU.Time;
U = out.simU.Data;

aileron    = U(:,1); % d_A
stabilator = U(:,2); % d_T
rudder     = U(:,3); % d_R
throttle1  = U(:,4); % d_th1
throttle2  = U(:,5); % d_th2

% Plot control inputs
figure;
subplot(5,1,1);
plot(t, aileron, 'r');
ylabel('Aileron (rad)');
title('Control Inputs');

subplot(5,1,2);
plot(t, stabilator, 'b');
ylabel('Stabilator (rad)');

subplot(5,1,3);
plot(t, rudder, 'g');
ylabel('Rudder (rad)');

subplot(5,1,4);
plot(t, throttle1, 'm');
ylabel('Throttle 1');

subplot(5,1,5);
plot(t, throttle2, 'c');
ylabel('Throttle 2');
xlabel('Time (s)');

% Extract time and state data
t = out.simX.Time;
X = out.simX.Data;

u     = X(:,1);
v     = X(:,2);
w     = X(:,3);
p     = X(:,4);
q     = X(:,5);
r     = X(:,6);
phi   = X(:,7);  % roll
theta = X(:,8);  % pitch
psi   = X(:,9);  % yaw

% Plot states
figure;
subplot(3,3,1);
plot(t, u); ylabel('u (m/s)'); title('Forward Velocity');

subplot(3,3,2);
plot(t, v); ylabel('v (m/s)'); title('Lateral Velocity');

subplot(3,3,3);
plot(t, w); ylabel('w (m/s)'); title('Vertical Velocity');

subplot(3,3,4);
plot(t, p); ylabel('p (rad/s)'); title('Roll Rate');

subplot(3,3,5);
plot(t, q); ylabel('q (rad/s)'); title('Pitch Rate');

subplot(3,3,6);
plot(t, r); ylabel('r (rad/s)'); title('Yaw Rate');

subplot(3,3,7);
plot(t, rad2deg(phi)); ylabel('\phi (deg)'); title('Roll Angle');

subplot(3,3,8);
plot(t, rad2deg(theta)); ylabel('\theta (deg)'); title('Pitch Angle');

subplot(3,3,9);
plot(t, rad2deg(psi)); ylabel('\psi (deg)'); title('Yaw Angle');

xlabel('Time (s)');
